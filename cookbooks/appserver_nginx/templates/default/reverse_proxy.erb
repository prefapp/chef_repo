upstream backend_<%= @domain %> {
    ip_hash;
    <% @backends.each do |backend| %>
    server <%= backend%>;
    <% end %>
}


server {
    listen 80;
    server_name <%= @domain %>;

    <% if @letsencrypt %>
    location /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /usr/share/nginx/html;
    }
    <%end%>

    <% if @redirect_to_https %>
    location / {
        return         301 https://$host$request_uri;
    }
    <% else %>

    location <%= @service_path %> {
        access_log off;

        proxy_pass http://backend_<%= @domain%>;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Path rewriting
        #rewrite /services/myservice/(.*) /$1 break;
        rewrite <%= @service_path %>(.*) /$1 break;
        proxy_redirect off;

    }
    <%end%>
}


server {
    listen       <%= @public_port %>;
    server_name  <%= @domain %>;

    <% if @ssl %>
    ssl on;

    # openssl dhparam 4096 -out /etc/ssl/dhparam.pem
    ssl_dhparam <%= @dhe_param_file %>;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;

    ssl_session_cache shared:TLS:2m;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 [2001:4860:4860::8888] [2001:4860:4860::8844];

    # Set HSTS to 365 days
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';

    <% if @letsencrypt %>
    location /.well-known/acme-challenge {
        root /usr/share/nginx/html;
    }

    ssl_certificate /etc/letsencrypt/live/<%=@domain%>/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/<%=@domain%>/privkey.pem;

    <% else %>
        
    ssl_certificate certs/<%=@domain%>.bundle.crt;
    ssl_certificate_key certs/<%=@domain%>.key;
    
    <%end # letsencrypt%>


    <%end # ssl%>
    
    error_log stderr;
    access_log stderr;

    location <%= @service_path %> {
        access_log off;

        proxy_pass http://backend_<%= @domain%>;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support (nginx 1.4)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Path rewriting
        #rewrite /services/myservice/(.*) /$1 break;
        rewrite <%= @service_path %>(.*) /$1 break;
        proxy_redirect off;

    }
}
